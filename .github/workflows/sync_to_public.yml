name: Sync to Public Repository

on:
  push:
    branches:
      - main # Or your primary branch name if different

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Private Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Set up Git
        run: |
          git config --global user.name "${{ github.actor }}" # Or a generic bot name
          git config --global user.email "${{ github.actor }}@users.noreply.github.com" # Or a bot email

      - name: Push to Public Repository
        env:
          PUBLIC_REPO_PAT: ${{ secrets.PUBLIC_REPO_PAT }}
          PRIVATE_REPO_URL: "https://github.com/${{ github.repository }}.git" # Gets the current private repo URL
          # IMPORTANT: Replace <PUBLIC_USERNAME_OR_ORG> and <PUBLIC_REPO_NAME> with your actual public repo details
          PUBLIC_REPO_URL: "https://github.com/<PUBLIC_USERNAME_OR_ORG>/<PUBLIC_REPO_NAME>.git"
          PUBLIC_BRANCH_NAME: "main" # Or the target branch name in the public repo
        run: |
          echo "Pushing from ${{ github.repository }} to ${{ env.PUBLIC_REPO_URL }}"
          git push --force "https://x-access-token:${PUBLIC_REPO_PAT}@github.com/<PUBLIC_USERNAME_OR_ORG>/<PUBLIC_REPO_NAME>.git" "HEAD:${PUBLIC_BRANCH_NAME}"
          # Example with variables:
          # git push --force "https://x-access-token:${PUBLIC_REPO_PAT}@${PUBLIC_REPO_URL#https://}" "HEAD:${PUBLIC_BRANCH_NAME}"
          # Note: The above example for PUBLIC_REPO_URL needs adjustment if you use it directly in the git push command as it includes https://

          # Simpler and more direct way:
          # git remote add public_repo "https://x-access-token:${PUBLIC_REPO_PAT}@github.com/<PUBLIC_USERNAME_OR_ORG>/<PUBLIC_REPO_NAME>.git"
          # git push --force public_repo "HEAD:${PUBLIC_BRANCH_NAME}"